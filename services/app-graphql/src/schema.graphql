schema {
    query: Query
    mutation: Mutation
}

type Query {
    fetchCurrentUser: User!
    fetchDraftSubmission(
        input: FetchDraftSubmissionInput!
    ): FetchDraftSubmissionPayload!
    fetchStateSubmission(
        input: FetchStateSubmissionInput!
    ): FetchStateSubmissionPayload!
    fetchSubmission2(
        input: FetchSubmission2Input!
    ): FetchSubmission2Payload!

    indexSubmissions: IndexSubmissionsPayload!
}

type Mutation {
    createDraftSubmission(
        input: CreateDraftSubmissionInput!
    ): CreateDraftSubmissionPayload!
    updateDraftSubmission(
        input: UpdateDraftSubmissionInput!
    ): UpdateDraftSubmissionPayload!
    submitDraftSubmission(
        input: SubmitDraftSubmissionInput!
    ): SubmitDraftSubmissionPayload!

    unlockStateSubmission(
        input: UnlockStateSubmissionInput!
    ): UnlockStateSubmissionPayload!
}

input CreateDraftSubmissionInput {
    programIDs: [ID!]!
    submissionType: SubmissionType!
    submissionDescription: String!
}

type CreateDraftSubmissionPayload {
    draftSubmission: DraftSubmission!
}

input FetchDraftSubmissionInput {
    submissionID: ID!
}

type FetchDraftSubmissionPayload {
    draftSubmission: DraftSubmission
}

input FetchStateSubmissionInput {
    submissionID: ID!
}

type FetchStateSubmissionPayload {
    submission: StateSubmission
}

input FetchSubmission2Input {
    submissionID: ID!
}

type FetchSubmission2Payload {
    submission: Submission2
}

type SubmissionEdge {
    node: Submission!
}

type IndexSubmissionsPayload {
    totalCount: Int
    edges: [SubmissionEdge!]!
}

input UpdateDraftSubmissionInput {
    submissionID: ID!
    draftSubmissionUpdates: DraftSubmissionUpdates!
}

type UpdateDraftSubmissionPayload {
    draftSubmission: DraftSubmission!
}

input SubmitDraftSubmissionInput {
    submissionID: ID!
}

type SubmitDraftSubmissionPayload {
    submission: StateSubmission!
}

input UnlockStateSubmissionInput {
    submissionID: ID!
}

type UnlockStateSubmissionPayload {
    submission: Submission2!
}

scalar Date
scalar DateTime

union User = StateUser | CMSUser

type StateUser {
    role: String!
    email: String!
    state: State!
    name: String!
}

type CMSUser {
    role: String!
    email: String!
    name: String!
}

type State {
    code: String!
    name: String!
    programs: [Program!]!
}

type Program {
    id: ID!
    name: String!
}

enum Submission2Status {
    DRAFT
    SUBMITTED
    UNLOCKED
    RESUBMITTED
}

type Submission2 {
    id: ID!
    status: Submission2Status!
    intiallySubmittedAt: Date
    stateCode: String!
    revisions: [RevisionEdge!]!
}

type UpdateInformation {
    updatedAt: Date
}

type Revision {
    id: ID!
    unlockInfo: UpdateInformation
    submitInfo: UpdateInformation
    createdAt: DateTime!
    submissionData: String!
}

type RevisionEdge {
    revision: Revision!
}

type StateContact {
    name: String!
    titleRole: String!
    email: String!
}

input StateContactInput {
    name: String!
    titleRole: String!
    email: String!
}

enum actuarialFirmType {
    MERCER
    MILLIMAN
    OPTUMAS
    GUIDEHOUSE
    DELOITTE
    STATE_IN_HOUSE
    OTHER
}

type ActuaryContact {
    name: String!
    titleRole: String!
    email: String!
    actuarialFirm: actuarialFirmType
    actuarialFirmOther: String
}

input ActuaryContactInput {
    name: String!
    titleRole: String!
    email: String!
    actuarialFirm: actuarialFirmType
    actuarialFirmOther: String
}

enum ActuaryCommunicationType {
    OACT_TO_ACTUARY
    OACT_TO_STATE
}

enum DocumentCategory {
    CONTRACT
    RATES
    CONTRACT_RELATED
    RATES_RELATED
}

type Document {
    name: String!
    s3URL: String!
    documentCategories: [DocumentCategory!]!
}

input DocumentInput {
    name: String!
    s3URL: String!
    documentCategories: [DocumentCategory!]!
}

type CapitationRatesAmendedInfo {
    reason: CapitationRatesAmendmentReason
    otherReason: String
}

input CapitationRatesAmendedInfoInput {
    reason: CapitationRatesAmendmentReason
    otherReason: String
}

type ContractAmendmentInfo {
    itemsBeingAmended: [String!]!
    otherItemBeingAmended: String
    capitationRatesAmendedInfo: CapitationRatesAmendedInfo
    relatedToCovid19: Boolean
    relatedToVaccination: Boolean
}

input ContractAmendmentInfoInput {
    itemsBeingAmended: [String!]!
    otherItemBeingAmended: String
    capitationRatesAmendedInfo: CapitationRatesAmendedInfoInput
    relatedToCovid19: Boolean
    relatedToVaccination: Boolean
}

enum CapitationRatesAmendmentReason {
    ANNUAL
    MIDYEAR
    OTHER
}

type RateAmendmentInfo {
    effectiveDateStart: Date
    effectiveDateEnd: Date
}

input RateAmendmentInfoInput {
    effectiveDateStart: Date
    effectiveDateEnd: Date
}

enum SubmissionType {
    CONTRACT_ONLY
    CONTRACT_AND_RATES
}

enum ContractType {
    BASE
    AMENDMENT
}

enum ContractExecutionStatus {
    EXECUTED
    UNEXECUTED
}

enum RateType {
    NEW
    AMENDMENT
}

enum FederalAuthority {
    STATE_PLAN
    WAIVER_1915B
    WAIVER_1115
    VOLUNTARY
    BENCHMARK
    TITLE_XXI
}

type DraftSubmission {
    id: ID!
    programIDs: [ID!]!
    program: Program! # This is dead code.
    submissionType: SubmissionType!
    submissionDescription: String!
    stateCode: String!
    name: String!
    createdAt: Date!
    updatedAt: DateTime!
    stateContacts: [StateContact!]!
    actuaryContacts: [ActuaryContact!]!
    actuaryCommunicationPreference: ActuaryCommunicationType
    documents: [Document!]!
    contractType: ContractType
    contractExecutionStatus: ContractExecutionStatus
    contractDocuments: [Document!]!
    contractDateStart: Date
    contractDateEnd: Date
    managedCareEntities: [String!]!
    federalAuthorities: [FederalAuthority!]!
    contractAmendmentInfo: ContractAmendmentInfo
    rateType: RateType
    rateDocuments: [Document!]!
    rateDateStart: Date
    rateDateEnd: Date
    rateDateCertified: Date
    rateAmendmentInfo: RateAmendmentInfo
}

type StateSubmission {
    id: ID!
    programIDs: [ID!]!
    program: Program!
    submissionType: SubmissionType!
    submissionDescription: String!
    stateCode: String!
    name: String!
    createdAt: Date!
    updatedAt: DateTime!
    stateContacts: [StateContact!]!
    actuaryContacts: [ActuaryContact!]!
    actuaryCommunicationPreference: ActuaryCommunicationType
    documents: [Document!]!
    contractAmendmentInfo: ContractAmendmentInfo
    submittedAt: Date!
    contractType: ContractType!
    contractExecutionStatus: ContractExecutionStatus!
    contractDocuments: [Document!]!
    contractDateStart: Date!
    contractDateEnd: Date!
    managedCareEntities: [String!]!
    federalAuthorities: [FederalAuthority!]!
    rateType: RateType
    rateDocuments: [Document!]!
    rateDateStart: Date
    rateDateEnd: Date
    rateDateCertified: Date
    rateAmendmentInfo: RateAmendmentInfo
}

union Submission = DraftSubmission | StateSubmission

input DraftSubmissionUpdates {
    programIDs: [ID!]!
    submissionType: SubmissionType!
    submissionDescription: String!
    stateContacts: [StateContactInput!]!
    actuaryContacts: [ActuaryContactInput!]!
    actuaryCommunicationPreference: ActuaryCommunicationType
    documents: [DocumentInput!]!
    contractType: ContractType
    contractExecutionStatus: ContractExecutionStatus
    contractDocuments: [DocumentInput!]!
    contractDateStart: Date
    contractDateEnd: Date
    managedCareEntities: [String!]!
    federalAuthorities: [FederalAuthority!]!
    contractAmendmentInfo: ContractAmendmentInfoInput
    rateType: RateType
    rateDocuments: [DocumentInput!]!
    rateDateStart: Date
    rateDateEnd: Date
    rateDateCertified: Date
    rateAmendmentInfo: RateAmendmentInfoInput
}
