overwrite: true
schema: 'src/schema.graphql'
hooks:
  afterAllFileWrite:
    # Forgive me. This hook passes the edited files in as argv, so we && echo to make them harmless
    - cp src/schema.graphql ../app-web/src/gen/ && echo "HI"
generates:
  ../app-api/gen/gqlServer.d.ts:
    plugins:
      - 'typescript'
      - 'typescript-resolvers'
    config: # Go ahead and prettier it
      contextType: ../handlers/apollo_gql#Context
      useIndexSignature: true # Don't forget this or Apollo will give an inscrutable error
      defaultMapper: Partial<{T}>
      enumsAsTypes: true
      mappers:
        User: ../../app-web/src/common-code/domain-models#CognitoUserType
        StateUser: ../../app-web/src/common-code/domain-models#CognitoStateUserType
        CMSUser: ../../app-web/src/common-code/domain-models#CognitoCMSUserType
        DraftSubmission: ../../app-web/src/common-code/domain-models#UnlockedHealthPlanFormDataType
        StateSubmission: ../../app-web/src/common-code/domain-models#LockedHealthPlanFormDataType
        Submission: ../../app-web/src/common-code/domain-models#HealthPlanFormDataType
        Submission2: ../../app-web/src/common-code/domain-models#HealthPlanPackageType
  ../app-web/src/gen/gqlClient.tsx:
    documents:
      - src/queries/*.graphql
      - src/mutations/*.graphql
    plugins:
      - 'typescript'
      - 'typescript-operations'
      - 'typescript-react-apollo'
    config:
      enumsAsTypes: true
  # ./src/common-code/graphql/generated/graphql.schema.json:
  #   plugins:
  #     - 'introspection'
