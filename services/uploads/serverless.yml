service: uploads

frameworkVersion: '2'

plugins:
  - serverless-s3-local

# The `provider` block defines where your service will be deployed
provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  s3:
    directory: ./local_buckets
    cors: ./local_cors.xml
    buckets:
      - local-uploads # This is a little silly, but I've spent enough time on it.
        # the serverless-s3-local plugin starts any bucket with a BucketName
        # the attachments bucket has no name, so we need to make one up on our own

resources:
  Resources:
    DocumentUploadsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
        CorsConfiguration: # Set the CORS policy
          CorsRules:
            - AllowedOrigins:
                - '*'
              AllowedHeaders:
                - '*'
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
                - HEAD
              MaxAge: 3000

    DocumentsUploadsBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref DocumentUploadsBucket
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Action: 's3:PutObject'
              Effect: Deny
              Principal: '*'
              NotResource:
                - !Sub ${DocumentUploadsBucket.Arn}/*.csv
                - !Sub ${DocumentUploadsBucket.Arn}/*.doc
                - !Sub ${DocumentUploadsBucket.Arn}/*.docx
                - !Sub ${DocumentUploadsBucket.Arn}/*.pdf
                - !Sub ${DocumentUploadsBucket.Arn}/*.txt
                - !Sub ${DocumentUploadsBucket.Arn}/*.xls
                - !Sub ${DocumentUploadsBucket.Arn}/*.xlsx

  # Print out the name of the bucket that is created
  Outputs:
    DocumentUploadsBucketName:
      Value: !Ref DocumentUploadsBucket
    DocumentUploadsBucketArn:
      Value: !GetAtt DocumentUploadsBucket.Arn
    Region:
      Value: !Sub ${AWS::Region}
