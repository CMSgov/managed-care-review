service: stream-functions

frameworkVersion: '2'

package:
  individually: true

plugins:
  - serverless-bundle
  - serverless-dotenv-plugin
  - serverless-stack-termination-protection
  - serverless-s3-bucket-helper
  - serverless-idempotency-helper

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  tableStreamArn: ${cf:database-${self:custom.stage}.AmendmentsTableStreamArn}
  emailSource: ${opt:emailSource, env:SES_SOURCE_EMAIL_ADDRESS, "admin@example.com"}
  reviewerEmail: ${opt:reviewTeamEmail, env:SES_REVIEW_TEAM_EMAIL_ADDRESS, "reviewteam@example.com"}
  iamPath: ${env:IAM_PATH, "/"}
  iamPermissionsBoundaryPolicy: ${env:FULL_IAM_PERMISSIONS_BOUNDARY_POLICY, ""}
  serverlessTerminationProtection:
    stages:
      - dev
      - val
      - prod
      - main

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  iam:
    role:
      path: ${self:custom.iamPath}
      permissionsBoundary: ${self:custom.iamPermissionsBoundaryPolicy}
      statements:
        - Effect: 'Allow'
          Action:
            - dynamodb:DescribeStream
            - dynamodb:GetRecords
            - dynamodb:GetShardIterator
            - dynamodb:ListStreams
          Resource: ${self:custom.tableStreamArn}
        - Effect: 'Allow'
          Action:
            - ses:SendEmail
            - ses:SendRawEmail
          Resource: '*'

functions:
  emailSubmitter:
    handler: handlers/emailSubmitter.handler
    events:
      - stream:
          arn: ${self:custom.tableStreamArn}
          startingPosition: LATEST
          maximumRetryAttempts: 2
    environment:
      emailSource: ${self:custom.emailSource}
    maximumRetryAttempts: 2
  emailReviewer:
    handler: handlers/emailReviewer.handler
    events:
      - stream:
          arn: ${self:custom.tableStreamArn}
          startingPosition: LATEST
          maximumRetryAttempts: 2
    environment:
      emailSource: ${self:custom.emailSource}
      reviewerEmail: ${self:custom.reviewerEmail}
    maximumRetryAttempts: 2
