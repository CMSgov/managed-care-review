/* 
    Custom application styles
    
    Use caution with this file.

    Here are examples where global styles may be needed: 
    1. We are dealing with container elements that repeat throughout the application outside of a specific component (divs, cards, display tables)
    2. We need override a behavior in USWDS that we can't control via setting 
    3. We want to hide an element from the screen using our global screenreader only class 

    Why it matters:     
    When styles live close to the component in a `*.module.scss` file they are automatically namespaced. 
    Here, overrides are global could disrupt styles application wide. 
*/
@forward "mcr-colors";  // whenever custom is imported, bring along app colors

@use "mcr-colors" as *;
@use "uswds-core" as *;

/* ACCESSIBILITY */
// Re-useable classname for hiding UI visually but still having it be read by screenreaders
.srOnly {
    position: absolute;
    left: -1000px;
    top: auto;
    width: 1px;
    height: 1px;
    overflow: hidden;
}

// Accessibility button contrast color fix for inverse button. 
.usa-button--outline.usa-button--inverse {
    box-shadow: inset 0 0 0 2px #fff;
    color: #fff !important;
    &:hover {
        box-shadow: inset 0 0 0 2px #dfe1e2;
        color: #dfe1e2 !important;
    }
}

/* CONTAINERS */
// Limit how far page content can stretch laterally, used on most logged in pages
$mcr-container-max-width-fixed: 50rem; 
.app-container-horizontal-pad {
    max-width: $mcr-container-max-width-fixed;
}

// Add top gradient to container, used on document tables
.borderTopLinearGradient {
    border: 0 solid;
    border-top: 10px solid;
    border-image-slice: 1;
    border-image-source: linear-gradient(
        to right,
        $mcr-color-blue-dark, 
        $mcr-color-cyan
    );
    box-shadow: inset 0 0 1px $mcr-color-gray-dark,
        0px 0px 24px rgb(0 0 0 / 5%);
}

/* HTML element overrides */
h3 {
    margin-top: 0;
    font-weight: normal;
    font-size: 1.3em;
}

// Remove html link styles from uswds button-styled links, used anywhere we have a link (Add New Submission) that is supposed to look like a button 
// This should probably be a standalone component rather than set in global styles
a[class^='usa-button usa-button--outline'] {
    text-decoration: none !important;
    color: $mcr-color-link-hover !important;
}
