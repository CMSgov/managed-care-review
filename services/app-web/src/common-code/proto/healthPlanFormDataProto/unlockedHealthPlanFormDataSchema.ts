/*
 * This file was generated by ts-to-zod, which turned out to be more fragile
 * than I hoped. So I'm checking this file in for now. Some future reconciliation between
 * this and our yup parsers and the type assertion we use for StateSubmission should come
 * in the future.
 */
import { z } from 'zod'

const submissionTypeSchema = z.union([
    z.literal('CONTRACT_ONLY'),
    z.literal('CONTRACT_AND_RATES'),
])

export const capitationRatesAmendedReasonSchema = z.union([
    z.literal('ANNUAL'),
    z.literal('MIDYEAR'),
    z.literal('OTHER'),
])

const submissionDocumentSchema = z.object({
    name: z.string(),
    s3URL: z.string(),
    documentCategories: z.array(
        z
            .union([
                z.literal('CONTRACT'),
                z.literal('RATES'),
                z.literal('CONTRACT_RELATED'),
                z.literal('RATES_RELATED'),
            ])
            .optional()
    ),
})

const contractAmendmentInfoSchema = z.object({
    modifiedProvisions: z
        .object({
            modifiedBenefitsProvided: z.boolean().optional(),
            modifiedGeoAreaServed: z.boolean().optional(),
            modifiedMedicaidBeneficiaries: z.boolean().optional(),
            modifiedRiskSharingStrategy: z.boolean().optional(),
            modifiedIncentiveArrangements: z.boolean().optional(),
            modifiedWitholdAgreements: z.boolean().optional(),
            modifiedStateDirectedPayments: z.boolean().optional(),
            modifiedPassThroughPayments: z.boolean().optional(),
            modifiedPaymentsForMentalDiseaseInstitutions: z
                .boolean()
                .optional(),
            modifiedMedicalLossRatioStandards: z.boolean().optional(),
            modifiedOtherFinancialPaymentIncentive: z.boolean().optional(),
            modifiedEnrollmentProcess: z.boolean().optional(),
            modifiedGrevienceAndAppeal: z.boolean().optional(),
            modifiedNetworkAdequacyStandards: z.boolean().optional(),
            modifiedLengthOfContract: z.boolean().optional(),
            modifiedNonRiskPaymentArrangements: z.boolean().optional(),
        })
        .required(),
})

const contractTypeSchema = z.union([z.literal('BASE'), z.literal('AMENDMENT')])

const contractExecutionStatusSchema = z.union([
    z.literal('EXECUTED'),
    z.literal('UNEXECUTED'),
])

const actuarialFirmTypeSchema = z.union([
    z.literal('MERCER'),
    z.literal('MILLIMAN'),
    z.literal('OPTUMAS'),
    z.literal('GUIDEHOUSE'),
    z.literal('DELOITTE'),
    z.literal('STATE_IN_HOUSE'),
    z.literal('OTHER'),
])

const actuaryCommunicationTypeSchema = z.union([
    z.literal('OACT_TO_ACTUARY'),
    z.literal('OACT_TO_STATE'),
])

const federalAuthoritySchema = z.union([
    z.literal('STATE_PLAN'),
    z.literal('WAIVER_1915B'),
    z.literal('WAIVER_1115'),
    z.literal('VOLUNTARY'),
    z.literal('BENCHMARK'),
    z.literal('TITLE_XXI'),
])

const stateContactSchema = z.object({
    name: z.string(),
    titleRole: z.string(),
    email: z.string(),
})

const actuaryContactSchema = z.object({
    name: z.string(),
    titleRole: z.string(),
    email: z.string(),
    actuarialFirm: actuarialFirmTypeSchema.optional(),
    actuarialFirmOther: z.string().optional(),
})

const rateTypeSchema = z.union([z.literal('NEW'), z.literal('AMENDMENT')])

const rateCapitationTypeSchema = z.union([
    z.literal('RATE_CELL'),
    z.literal('RATE_RANGE'),
])

// Commenting out because this wasn't being used but was raising lint warning -hw
// const managedCareEntitySchema = z.union([
//     z.literal('MCO'),
//     z.literal('PIHP'),
//     z.literal('PAHP'),
//     z.literal('PCCM'),
// ])

// const amendableItemsSchema = z.union([
//     z.literal('BENEFITS_PROVIDED'),
//     z.literal('CAPITATION_RATES'),
//     z.literal('ENCOUNTER_DATA'),
//     z.literal('ENROLLE_ACCESS'),
//     z.literal('ENROLLMENT_PROCESS'),
//     z.literal('FINANCIAL_INCENTIVES'),
//     z.literal('GEO_AREA_SERVED'),
//     z.literal('GRIEVANCES_AND_APPEALS_SYSTEM'),
//     z.literal('LENGTH_OF_CONTRACT_PERIOD'),
//     z.literal('NON_RISK_PAYMENT'),
//     z.literal('PROGRAM_INTEGRITY'),
//     z.literal('QUALITY_STANDARDS'),
//     z.literal('RISK_SHARING_MECHANISM'),
// ])

const dayUnion = z.union([
    z.literal('01'),
    z.literal('02'),
    z.literal('03'),
    z.literal('04'),
    z.literal('05'),
    z.literal('06'),
    z.literal('07'),
    z.literal('08'),
    z.literal('09'),
    z.literal('10'),
    z.literal('11'),
    z.literal('12'),
    z.literal('13'),
    z.literal('14'),
    z.literal('15'),
    z.literal('16'),
    z.literal('17'),
    z.literal('18'),
    z.literal('19'),
    z.literal('20'),
    z.literal('21'),
    z.literal('22'),
    z.literal('23'),
    z.literal('24'),
    z.literal('25'),
    z.literal('26'),
    z.literal('27'),
    z.literal('28'),
    z.literal('29'),
    z.literal('30'),
    z.literal('31'),
])

type daySchema = z.infer<typeof dayUnion>

const monthUnion = z.union([
    z.literal('01'),
    z.literal('02'),
    z.literal('03'),
    z.literal('04'),
    z.literal('05'),
    z.literal('06'),
    z.literal('07'),
    z.literal('08'),
    z.literal('09'),
    z.literal('10'),
    z.literal('11'),
    z.literal('12'),
])

type monthSchema = z.infer<typeof monthUnion>

const yearUnion = z.union([
    z.literal('1950'),
    z.literal('1951'),
    z.literal('1952'),
    z.literal('1953'),
    z.literal('1954'),
    z.literal('1955'),
    z.literal('1956'),
    z.literal('1957'),
    z.literal('1958'),
    z.literal('1959'),
    z.literal('1960'),
    z.literal('1961'),
    z.literal('1962'),
    z.literal('1963'),
    z.literal('1964'),
    z.literal('1965'),
    z.literal('1966'),
    z.literal('1967'),
    z.literal('1968'),
    z.literal('1969'),
    z.literal('1970'),
    z.literal('1971'),
    z.literal('1972'),
    z.literal('1973'),
    z.literal('1974'),
    z.literal('1975'),
    z.literal('1976'),
    z.literal('1977'),
    z.literal('1978'),
    z.literal('1979'),
    z.literal('1980'),
    z.literal('1981'),
    z.literal('1982'),
    z.literal('1983'),
    z.literal('1984'),
    z.literal('1985'),
    z.literal('1986'),
    z.literal('1987'),
    z.literal('1988'),
    z.literal('1989'),
    z.literal('1990'),
    z.literal('1991'),
    z.literal('1992'),
    z.literal('1993'),
    z.literal('1994'),
    z.literal('1995'),
    z.literal('1996'),
    z.literal('1997'),
    z.literal('1998'),
    z.literal('1999'),
    z.literal('2000'),
    z.literal('2001'),
    z.literal('2002'),
    z.literal('2003'),
    z.literal('2004'),
    z.literal('2005'),
    z.literal('2006'),
    z.literal('2007'),
    z.literal('2008'),
    z.literal('2009'),
    z.literal('2010'),
    z.literal('2011'),
    z.literal('2012'),
    z.literal('2013'),
    z.literal('2014'),
    z.literal('2015'),
    z.literal('2016'),
    z.literal('2017'),
    z.literal('2018'),
    z.literal('2019'),
    z.literal('2020'),
    z.literal('2021'),
    z.literal('2022'),
    z.literal('2023'),
    z.literal('2024'),
    z.literal('2025'),
    z.literal('2026'),
    z.literal('2027'),
    z.literal('2028'),
    z.literal('2029'),
    z.literal('2030'),
    z.literal('2031'),
    z.literal('2032'),
    z.literal('2033'),
    z.literal('2034'),
    z.literal('2035'),
    z.literal('2036'),
    z.literal('2037'),
    z.literal('2038'),
    z.literal('2039'),
    z.literal('2040'),
    z.literal('2041'),
    z.literal('2042'),
    z.literal('2043'),
    z.literal('2044'),
    z.literal('2045'),
    z.literal('2046'),
    z.literal('2047'),
    z.literal('2048'),
    z.literal('2049'),
    z.literal('2050'),
    z.literal('2051'),
    z.literal('2052'),
    z.literal('2053'),
    z.literal('2054'),
    z.literal('2055'),
    z.literal('2056'),
    z.literal('2057'),
    z.literal('2058'),
    z.literal('2059'),
    z.literal('2060'),
    z.literal('2061'),
    z.literal('2062'),
    z.literal('2063'),
    z.literal('2064'),
    z.literal('2065'),
    z.literal('2066'),
    z.literal('2067'),
    z.literal('2068'),
    z.literal('2069'),
    z.literal('2070'),
    z.literal('2071'),
    z.literal('2072'),
    z.literal('2073'),
    z.literal('2074'),
    z.literal('2075'),
    z.literal('2076'),
    z.literal('2077'),
    z.literal('2078'),
    z.literal('2079'),
    z.literal('2080'),
    z.literal('2081'),
    z.literal('2082'),
    z.literal('2083'),
    z.literal('2084'),
    z.literal('2085'),
    z.literal('2086'),
    z.literal('2087'),
    z.literal('2088'),
    z.literal('2089'),
    z.literal('2090'),
    z.literal('2091'),
    z.literal('2092'),
    z.literal('2093'),
    z.literal('2094'),
    z.literal('2095'),
    z.literal('2096'),
    z.literal('2097'),
    z.literal('2098'),
    z.literal('2099'),
    z.literal('2100'),
])

type yearSchema = z.infer<typeof yearUnion>

const calendarDateSchema =
    z.custom<`${yearSchema}-${monthSchema}-${daySchema}`>()

const rateAmendmentInfoSchema = z.object({
    effectiveDateStart: calendarDateSchema.optional(),
    effectiveDateEnd: calendarDateSchema.optional(),
})

export const unlockedHealthPlanFormDataSchema = z.object({
    id: z.string(),
    createdAt: z.date(),
    updatedAt: z.date(),
    status: z.literal('DRAFT'),
    stateCode: z.string(),
    stateNumber: z.number(),
    programIDs: z.array(z.string()),
    submissionType: submissionTypeSchema,
    submissionDescription: z.string(),
    stateContacts: z.array(stateContactSchema),
    actuaryContacts: z.array(actuaryContactSchema),
    actuaryCommunicationPreference: actuaryCommunicationTypeSchema.optional(),
    documents: z.array(submissionDocumentSchema),
    contractType: contractTypeSchema.optional(),
    contractExecutionStatus: contractExecutionStatusSchema.optional(),
    contractDocuments: z.array(submissionDocumentSchema),
    contractDateStart: calendarDateSchema.optional(),
    contractDateEnd: calendarDateSchema.optional(),
    managedCareEntities: z.array(z.string()),
    federalAuthorities: z.array(federalAuthoritySchema),
    contractAmendmentInfo: contractAmendmentInfoSchema.optional(),
    rateType: rateTypeSchema.optional(),
    rateCapitationType: rateCapitationTypeSchema.optional(),
    rateDocuments: z.array(submissionDocumentSchema).optional(),
    rateDateStart: calendarDateSchema.optional(),
    rateDateEnd: calendarDateSchema.optional(),
    rateDateCertified: calendarDateSchema.optional(),
    rateAmendmentInfo: rateAmendmentInfoSchema.optional(),
})
