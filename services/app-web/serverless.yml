service: app-web

frameworkVersion: '^3.19.0'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1

plugins:
  - serverless-plugin-scripts
  - serverless-s3-sync
  - serverless-cloudfront-invalidate
  - serverless-stack-termination-protection
  - serverless-s3-bucket-helper

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${aws:region}
  api_url: ${cf:infra-api-${sls:stage}.ApiGatewayRestApiUrl}
  application_endpoint_url: ${cf:ui-${sls:stage}.CloudFrontEndpointUrl}
  cognito_region: ${cf:ui-auth-${sls:stage}.Region}
  cognito_identity_pool_id: ${cf:ui-auth-${sls:stage}.IdentityPoolId}
  cognito_user_pool_id: ${cf:ui-auth-${sls:stage}.UserPoolId}
  cognito_client_id: ${cf:ui-auth-${sls:stage}.UserPoolClientId}
  cognito_user_pool_client_domain: ${cf:ui-auth-${sls:stage}.UserPoolClientDomain}
  s3_documents_bucket_region: ${cf:uploads-${sls:stage}.Region}
  s3_documents_bucket_name: ${cf:uploads-${sls:stage}.DocumentUploadsBucketName}
  s3_qa_bucket_name: ${cf:uploads-${sls:stage}.QAUploadsBucketName}
  ui_s3_bucket_name: ${cf:ui-${sls:stage}.S3BucketName}
  ui_cloudfront_distribution_id: ${cf:ui-${sls:stage}.CloudFrontDistributionId}
  storybook_s3_bucket_name: ${cf:storybook-${sls:stage}.S3BucketName}
  storybook_cloudfront_distribution_id: ${cf:storybook-${sls:stage}.CloudFrontDistributionId}
  react_app_auth_mode: ${env:REACT_APP_AUTH_MODE}
  nr_license_key: ${env:NR_LICENSE_KEY, ssm:/configuration/nr_license_key}
  react_app_ld_client_id: ${env:REACT_APP_LD_CLIENT_ID, ssm:/configuration/react_app_ld_client_id_feds}
  serverlessTerminationProtection:
    stages:
      - dev
      - val
      - prod
      - main

  s3Sync:
    - bucketName: ${self:custom.ui_s3_bucket_name}
      localDir: ./build
      deleteRemoved: true
    - bucketName: ${self:custom.storybook_s3_bucket_name}
      localDir: ./storybook-static
      deleteRemoved: true

  cloudfrontInvalidate:
    - distributionId: ${self:custom.ui_cloudfront_distribution_id}
      items:
        - '/*'
    - distributionId: ${self:custom.storybook_cloudfront_distribution_id}
      items:
        - '/*'

  scripts:
    hooks:
      # Build the static archive and populate the config
      package:initialize: |
        set -e
        export REACT_APP_AUTH_MODE=${self:custom.react_app_auth_mode}
        export REACT_APP_API_URL=${self:custom.api_url}
        export REACT_APP_APPLICATION_ENDPOINT=${self:custom.application_endpoint_url}
        export REACT_APP_COGNITO_REGION=${self:custom.cognito_region}
        export REACT_APP_COGNITO_ID_POOL_ID=${self:custom.cognito_identity_pool_id}
        export REACT_APP_COGNITO_USER_POOL_ID=${self:custom.cognito_user_pool_id}
        export REACT_APP_COGNITO_USER_POOL_CLIENT_ID=${self:custom.cognito_client_id}
        export REACT_APP_COGNITO_USER_POOL_CLIENT_DOMAIN=${self:custom.cognito_user_pool_client_domain}
        export REACT_APP_S3_REGION=${self:custom.s3_documents_bucket_region}
        export REACT_APP_S3_DOCUMENTS_BUCKET=${self:custom.s3_documents_bucket_name}
        export REACT_APP_S3_QA_BUCKET=${self:custom.s3_qa_bucket_name}
        export REACT_APP_STAGE_NAME=${sls:stage}
        export REACT_APP_OTEL_COLLECTOR_URL=${self:custom.application_endpoint_url}/otel
        export REACT_APP_LD_CLIENT_ID=${self:custom.react_app_ld_client_id}

        yarn run build
        yarn build-storybook
