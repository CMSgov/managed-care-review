name: Promote to an environment

on:
  workflow_call:
    inputs:
      stage_name:
        required: true
        type: string
      changed_services:
        required: true
        type: string
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      aws_default_region:
        required: true
      iam_path:
        required: true
      full_iam_permissions_boundary_policy:
        required: true
      cloudfront_certificate_arn:
        required: false
      cloudfront_domain_name:
        required: false
      cloudfront_storybook_domain_name:
        required: false
      ses_source_email_address:
        required: true
      okta_metadata_url:
        required: true
      nr_license_key:
        required: true

jobs:
  postgres:
    if: ${{ contains(inputs.changed_services, 'postgres') }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup env
        uses: ./.github/actions/setup_env

      - name: deploy postgres
        id: deploy-postgres
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
          AWS_DEFAULT_REGION: ${{ secrets.aws_default_region }}
          IAM_PATH: ${{ secrets.iam_path }}
          FULL_IAM_PERMISSIONS_BOUNDARY_POLICY: ${{ secrets.full_iam_permissions_boundary_policy }}
        run: |
          pushd services/postgres && npx serverless deploy --stage ${{ inputs.stage_name }} --enforce-hash-update

  ui:
    if: ${{ contains(inputs.changed_services, 'ui') }}
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup env
        uses: ./.github/actions/setup_env

      - name: deploy ui
        id: deploy-ui
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
          AWS_DEFAULT_REGION: ${{ secrets.aws_default_region }}
          IAM_PATH: ${{ secrets.iam_path }}
          CLOUDFRONT_CERTIFICATE_ARN: ${{ secrets.cloudfront_certificate_arn }}
          CLOUDFRONT_DOMAIN_NAME: ${{ secrets.cloudfront_domain_name }}
        run: |
          pushd services/ui && npx serverless deploy --stage ${{ inputs.stage_name }}

  storybook:
    if: ${{ contains(inputs.changed_services, 'storybook') }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup env
        uses: ./.github/actions/setup_env

      - name: deploy storybook
        id: deploy-storybook
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
          AWS_DEFAULT_REGION: ${{ secrets.aws_default_region }}
          IAM_PATH: ${{ secrets.iam_path }}
          CLOUDFRONT_CERTIFICATE_ARN: ${{ secrets.cloudfront_certificate_arn }}
          CLOUDFRONT_STORYBOOK_DOMAIN_NAME: ${{ secrets.cloudfront_storybook_domain_name }}

        run: |
          pushd services/storybook && npx serverless deploy --stage ${{ inputs.stage_name }}

  uploads:
    if: ${{ contains(inputs.changed_services, 'uploads') }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup env
        uses: ./.github/actions/setup_env

      - name: deploy uploads
        id: deploy-uploads
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
          AWS_DEFAULT_REGION: ${{ secrets.aws_default_region }}
          FULL_IAM_PERMISSIONS_BOUNDARY_POLICY: ${{ secrets.full_iam_permissions_boundary_policy }}
          IAM_PATH: ${{ secrets.iam_path }}
          NR_LICENSE_KEY: ${{ secrets.nr_license_key }}
        run: |
          pushd services/uploads && npx serverless deploy --stage ${{ inputs.stage_name }}

  infra-api:
    if: ${{ contains(inputs.changed_services, 'infra-api') }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup env
        uses: ./.github/actions/setup_env

      - name: deploy infra-api
        id: deploy-uploads
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
          AWS_DEFAULT_REGION: ${{ secrets.aws_default_region }}
          NR_LICENSE_KEY: ${{ secrets.nr_license_key }}
          FULL_IAM_PERMISSIONS_BOUNDARY_POLICY: ${{ secrets.full_iam_permissions_boundary_policy }}
          IAM_PATH: ${{ secrets.iam_path }}
        run: |
          pushd services/infra-api && npx serverless deploy --stage ${{ inputs.stage_name }}

  ui-auth:
    needs: [infra-api, ui, uploads]
    if: ${{ contains(inputs.changed_services, 'ui-auth') }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup env
        uses: ./.github/actions/setup_env

      - name: deploy ui-auth
        id: deploy-ui-auth
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
          AWS_DEFAULT_REGION: ${{ secrets.aws_default_region }}
          IAM_PATH: ${{ secrets.iam_path }}
          FULL_IAM_PERMISSIONS_BOUNDARY_POLICY: ${{ secrets.full_iam_permissions_boundary_policy }}
          SES_SOURCE_EMAIL_ADDRESS: ${{ secrets.ses_source_email_address }}
          OKTA_METADATA_URL: ${{ secrets.okta_metadata_url }}

        run: |
          pushd services/ui-auth && npx serverless deploy --stage ${{ inputs.stage_name }}
