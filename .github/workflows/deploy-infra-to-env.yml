name: Promote to an environment

on:
  workflow_call:
    inputs:
      stage_name:
        required: true
        type: string
      changed_services:
        required: true
        type: string
    secrets:
      aws_default_region:
        required: true
      oidc_role_arn:
        required: true
      personal_access_token:
        required: true

permissions:
  id-token: write

jobs:
  # deploy the OIDC service first, as subsequent deploys may depend on updated OIDC permissions
  github-oidc:
      if: ${{ contains(inputs.changed_services, 'github-oidc') }}
      runs-on: ubuntu-20.04
      steps:
        - name: Check out repository
          uses: actions/checkout@v3

        - name: Setup env
          uses: ./.github/actions/setup_env

        - name: build scripts
          shell: bash
          run: |
            lerna run build:ci-scripts

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1-node16
          with:
            aws-region: ${{ secrets.aws_default_region }}
            role-to-assume: ${{ secrets.oidc_role_arn }}

        - name: deploy github-oidc
          id: deploy-github-oidc
          env:
            GITHUB_TOKEN: ${{ secrets.personal_access_token }}
          run: |
            pushd services/github-oidc && npx serverless deploy --stage ${{ inputs.stage_name }}

  postgres:
    # for this and subsequent jobs, wait for the OIDC service unless it was skipped
    needs: github-oidc
    if: ${{ always() && contains(inputs.changed_services, 'postgres') }}
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup env
        uses: ./.github/actions/setup_env

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{ secrets.aws_default_region }}
          role-to-assume: ${{ secrets.oidc_role_arn }}

      - name: deploy postgres
        id: deploy-postgres
        run: |
          pushd services/postgres && npx serverless deploy --stage ${{ inputs.stage_name }}

  ui:
    needs: github-oidc
    if: ${{ always() && contains(inputs.changed_services, 'ui') }}
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup env
        uses: ./.github/actions/setup_env

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{ secrets.aws_default_region }}
          role-to-assume: ${{ secrets.oidc_role_arn }}

      - name: deploy ui
        id: deploy-ui
        run: |
          pushd services/ui && npx serverless deploy --stage ${{ inputs.stage_name }}

  storybook:
    needs: github-oidc
    if: ${{ always() && contains(inputs.changed_services, 'storybook') }}
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup env
        uses: ./.github/actions/setup_env

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{ secrets.aws_default_region }}
          role-to-assume: ${{ secrets.oidc_role_arn }}

      - name: deploy storybook
        id: deploy-storybook
        run: |
          pushd services/storybook && npx serverless deploy --stage ${{ inputs.stage_name }}

  uploads:
    needs: github-oidc
    if: ${{ always() && contains(inputs.changed_services, 'uploads') }}
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup env
        uses: ./.github/actions/setup_env

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{ secrets.aws_default_region }}
          role-to-assume: ${{ secrets.oidc_role_arn }}

      - name: deploy uploads
        id: deploy-uploads
        run: |
          pushd services/uploads && npx serverless deploy --stage ${{ inputs.stage_name }}

  infra-api:
    needs: github-oidc
    if: ${{ always() && contains(inputs.changed_services, 'infra-api') }}
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup env
        uses: ./.github/actions/setup_env

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{ secrets.aws_default_region }}
          role-to-assume: ${{ secrets.oidc_role_arn }}

      - name: deploy infra-api
        id: deploy-uploads
        run: |
          pushd services/infra-api && npx serverless deploy --stage ${{ inputs.stage_name }}

  ui-auth:
    needs: [github-oidc, infra-api, ui, uploads]
    if: ${{ always() && contains(inputs.changed_services, 'ui-auth') }}
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup env
        uses: ./.github/actions/setup_env

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{ secrets.aws_default_region }}
          role-to-assume: ${{ secrets.oidc_role_arn }}

      - name: deploy ui-auth
        id: deploy-ui-auth
        run: |
          pushd services/ui-auth && npx serverless deploy --stage ${{ inputs.stage_name }}
